#####################################
#           SUID Scan               #
#         by the-jcksn              #
#             V 1.0                 #
#       github.com/the-jcksn        #
#    Props to GTFOBins.github.io    #
#####################################

import subprocess
import os
import requests

#defining cmdline
def cmdline(command):
	terminal_output = subprocess.getoutput(command)
	return(terminal_output)
#defining printline
def printline():
	print('==================================================')

#starting suid scan
print('\n      _/_/_/  _/    _/  _/_/_/  _/_/_/          _/_/_/    _/_/_/    _/_/    _/      _/   ')
print('   _/        _/    _/    _/    _/    _/      _/        _/        _/    _/  _/_/    _/    ')
print('    _/_/    _/    _/    _/    _/    _/        _/_/    _/        _/_/_/_/  _/  _/  _/     ')
print('       _/  _/    _/    _/    _/    _/            _/  _/        _/    _/  _/    _/_/      ')
print('_/_/_/      _/_/    _/_/_/  _/_/_/        _/_/_/      _/_/_/  _/    _/  _/      _/       ')
print('\nStarting SUID Scan...\n')

#search for binaries with the suid bit set
printline()
print('\nSearching for binaries with the SUID bit set, please wait...\n')
find_suid = 'find / type f -perm -4000 2>/dev/null'
output = cmdline(find_suid)
suid_list = output.split('\n')
count = 0
for line in suid_list:
	count += 1
	print(str(count) + '.',line)

#adding all found suid binaries to a list
suid_binary_list = []
for line in suid_list:
	line = line.split('/')
	binary = str(line[-1:])
	binary = binary[2:-2]
	suid_binary_list.append(binary)

#list of all known GTFO SUID bypasses
gtfo_avail_suid = ['ab','agetty','alpine','ar','arj','arp','as','ascii-xfr','ash','aspell','atobm','awk','base32','base64','basenc','basez','bash','bridge','busybox','bzip2','capsh','cat','chmod','choom','chown','chroot','cmp','column','comm','cp','cpio','cpulimit','csh','csplit','csvtooo','cupsfilter','curl','cut','dash','date','dd','dialog','diff','dig','dmsetup','docker','dosbox','ed','efax','emacs','env','eqn','expand','expect','file','find','fish','flock','fmt','fold','gawk','gcore','gdb','genie','genisoimage','gimp','grep','gtester','gzip','hd','head','hexdump','highlight','hping3','iconv','install','ionice','ip','ispell','jjs','join','jq','jrunscript','ksh','ksshell','kubextl','ld.so','less','logsave','look','lua','make','mawk','more','mosquitto','msgattrib','msgcat','msfconv','msgfilter','msgmerge','msguniq','multitime','mv','nasm','nawk','nice','nl','nm','nmap','node','nohup','od','openssl','openvpn','paste','perf','perl','pg','php','pidstat','pr','ptx','python','readelf','restic','rev','rlwrap','rsync','run-parts','rview','rvim','sash','scanmem','sed','setarch','shuf','soelim','sort','sqlite3','ss','ssh-keygen','ssh-keyscan','sshpass','start-stop-daemon','stdbuf','strace','strings','sysctl','systemctl','tac','tail','taskset','tbl','tclsh','tee','tftp','tic','time','timeout','troff','ul','unexpand','uniq','unshare','update-alternatives','uudecode','view','vigr','vim','vimdiff','vipw','watch','wc','wget','whiptail','xargs','xdotool','wmodmap','xmore','xxd','xz','zsh','zsoelim']

#check if any of our suid binaries are on GTFO
print('\nChecking available SUID binaries against GTFOBins.\n')
count = 0
for binary in suid_binary_list:
	if binary in gtfo_avail_suid:
		count += 1
		#if they are in our gtfo suid list then print the suitable url link
		url = 'https://gtfobins.github.io/gtfobins/' + binary + '/#suid'
		print(str(count) + '.',binary,'-potentially vulnerable. Access information at',url)

#print if none found
if count == 0:
	print('No potential vulnerabilities found on GTFOBins for available SUID binaries.\n')
	print('Better luck next time!')
	print('Quitting...')
