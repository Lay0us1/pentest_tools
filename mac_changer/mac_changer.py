#mac changer
#changes interface MAC address to any specified
#github.com/the-jcksn

import subprocess
import os
import argparse
import re

def cmdline(command):
	terminal_output = subprocess.getoutput(command)
	return(terminal_output)

def getcurrentmac():
	current_mac = cmdline('ifconfig')
	current_mac = str(current_mac.split(args.interface))
	current_mac = current_mac.split('\\n')
	for line in current_mac:
	        if 'ether' in line:
               	 mac_address = line.split(' ')
               	 for segment in mac_address:
        	                if ':' in segment:
	                                initial_mac = segment
	return(initial_mac)

parser = argparse.ArgumentParser()
parser.add_argument('-i', default='none', dest='interface', help='Provide an interface to change MAC on. <REQUIRED>', type=str)
parser.add_argument('-m', default='none', dest='new_mac', help='Provide the desired MAC address', type=str)
args = parser.parse_args()

if not 'SUDO_UID' in os.environ.keys():
	print('\nThis script requires super user privs (sudo), please come back when the grown-ups say it\'s ok...')
	quit()

if args.interface == 'none':
	print('\nNo interface specified with \'-i\'')
	print('Quitting...')
	quit()

if args.new_mac == 'none':
	print('\nNo desired MAC address specified with \'-m\'')
	print('Quitting...')
	quit()

if not re.match("[0-9a-f]{2}([:])[0-9a-f]{2}(\\1[0-9a-f]{2}){4}$", args.new_mac):
	print('\nInvalid MAC address supplied.')
	print('Please use the format 12:23:ab:cd:45:67')
	quit()

current_mac = cmdline('ifconfig')
current_mac = str(current_mac.split(args.interface))
current_mac = current_mac.split('\\n')

macadd = getcurrentmac()

print('\nCurrent MAC address is  : ',macadd)
print('Changing MAC address to : ',args.new_mac)

bring_down = 'sudo ifconfig ' + args.interface + ' down'
bring_up = 'sudo ifconfig ' + args.interface + ' up'
change_mac = 'sudo ifconfig ' + args.interface + ' hw ether ' + args.new_mac

cmdline(bring_down)
cmdline(change_mac)
cmdline(bring_up)

macadd = getcurrentmac()
if macadd == args.new_mac:
	print('\nChange was successful.')
else:
	print('Unknown failure.')
